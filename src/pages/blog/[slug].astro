---
import { getCollection } from "astro:content";
import Container from "@components/container.astro";
import Layout from "@layouts/Layout.astro";
import { getArticleReadingTime } from "@utils/blog";
import { Icon } from "astro-icon/components";

// Generate a new path for every collection post
export async function getStaticPaths() {
	const blogEntries = await getCollection("blog");
	return blogEntries.map((post) => {
		let slug = post.slug.substring(3);
		return {
			params: { slug: slug },
			props: { post: post },
		};
	});
}

// Get the post directly from the prop on render
import type { CollectionEntry } from 'astro:content';
interface Props {
	post: CollectionEntry<'blog'>;
}
const { post } = Astro.props;
const { render } = post;
const { Content } = await render();
const readTime = getArticleReadingTime(post.body);
---

<Layout title={post.data.title} lang="en">
	<Container>
		<div class="mx-auto prose prose-lg dark:prose-invert mt-14">
			<a
				href={`/blog/category/${post.data.category?.toLowerCase()}`}
				class="text-blue-400 dark:text-stone-400 uppercase tracking-wider text-sm font-medium no-underline">
				{post.data.category}
			</a>
			<h1 class="text-4xl mb-3 lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight dark:text-white">
				{post.data.title}
			</h1>
			<div class="flex gap-2 items-center">
				<div class="w-full md:w-auto flex flex-wrap gap-3">
					{
						post.data.tags.map((tag) => (
							<a href={`/blog/tag/${tag?.toLowerCase()}`} class="text-sm text-gray-500 dark:text-stone-300">
								#{tag}
							</a>
						))
					}
				</div>
			</div>
			<div class="flex gap-2 mt-4 items-center flex-wrap md:flex-nowrap">
				<span class="text-gray-400 dark:text-stone-400">
					{post.data.author}
				</span>
				<span class="text-gray-400 dark:text-stone-400">•</span>
				<span class="text-gray-400 dark:text-stone-400">
					{readTime} min
				</span>
				<span class="text-gray-400 dark:text-stone-400">•</span>
				<time class="text-gray-400 dark:text-stone-400" datetime={post.data.publishDate.toISOString()}>
					{post.data.publishDate.toDateString()}
				</time>
			</div>
		</div>

		<div class="mx-auto prose prose-lg dark:prose-invert mt-6 dark:text-gray-200">
			<Content />
		</div>
		<div class="mx-auto mt-20">
			<a href="/blog">
				<div class="flex flex-row align-middle justify-center dark:text-stone-200">
					<Icon name="tabler:chevron-left" class="w-6 h-6" />
					<p class="ml-2">Back to blogs</p>
				</div>
			</a>
		</div>
		<div
			class="mx-auto prose prose-lg dark:prose-invert mt-20"
			x-data="{
				initGiscus: function() {
					let script = document.createElement('script');
					script.src = 'https://giscus.app/client.js';
					script.dataset.repo = 'AxOS-project/axos-project.github.io';
					script.dataset.repoId = 'R_kgDOJKSwNQ';
					script.dataset.category = 'Blogs';
					script.dataset.categoryId = 'DIC_kwDOJKSwNc4Cnj7Y';
					script.dataset.mapping = 'title';
					script.dataset.strict = '0';
					script.dataset.reactionsEnabled = '1';
					script.dataset.emitMetadata = '0';
					script.dataset.inputPosition = 'top';
					script.dataset.theme = localStorage.theme == 'dark' ? 'dark' : localStorage.theme == 'light' ? 'light' : 'preferred_color_scheme';
					script.dataset.lang = 'en';
					script.dataset.loading = 'lazy';
					script.crossOrigin = 'anonymous';
					script.async = true;
					this.$el.appendChild(script);
				}
			}"
			x-init="initGiscus()">
		</div>
	</Container>
</Layout>
